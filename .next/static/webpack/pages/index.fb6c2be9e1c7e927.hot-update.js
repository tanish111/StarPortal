"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/index",{

/***/ "./GlobalConts/global.tsx":
/*!********************************!*\
  !*** ./GlobalConts/global.tsx ***!
  \********************************/
/***/ (function(module, exports, __webpack_require__) {

eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.networkChaintologo = exports.contractConfigEthSepolia = void 0;\nvar _starportalAbiJson = _interopRequireDefault(__webpack_require__(/*! ../abi/starportal-abi.json */ \"./abi/starportal-abi.json\"));\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\nvar contractConfigEthSepolia = {\n    addressOrName: \"0xc817EB961d6A883bfF0AB60A25819e6b1F7D94dc\",\n    contractInterface: _starportalAbiJson.default\n};\nexports.contractConfigEthSepolia = contractConfigEthSepolia;\nvar contractConfigArbSepolia = {\n    addressOrName: \"0x38149AA01AF04178b9e481D8221aaEa90ad8f722\",\n    contractInterface: _starportalAbiJson.default\n};\nvar networkToContractAddressMap = {\n    eth_sepolia: \"0xc817EB961d6A883bfF0AB60A25819e6b1F7D94dc\",\n    arb_sepolia: \"0x38149AA01AF04178b9e481D8221aaEa90ad8f722\",\n    Rinkeby: \"0xYourContractAddressForRinkeby\",\n    Goerli: \"0xYourContractAddressForGoerli\",\n    Optimism: \"0xYourContractAddressForOptimism\",\n    Polygon: \"0xYourContractAddressForPolygon\"\n};\nvar networkToChainIdMap = {\n    eth_sepolia: 1001,\n    arb_sepolia: 1002,\n    Rinkeby: 1004,\n    Goerli: 1004,\n    Optimism: 1005,\n    Polygon: 1006\n};\nvar networkChaintologo = new Map([\n    [\n        \"eth_sepolia\",\n        \"/logo_eth_sepolia.png\"\n    ],\n    [\n        \"arb_sepolia\",\n        \"/logo_arb_sepolia.png\"\n    ],\n    [\n        \"Rinkeby\",\n        \"/logo_Rinkeby.png\"\n    ],\n    [\n        \"Goerli\",\n        \"/logo_Goerli.png\"\n    ],\n    [\n        \"Optimism\",\n        \"/logo_Optimism.png\"\n    ],\n    [\n        \"Polygon\",\n        \"/logo_Polygon.png\"\n    ]\n]);\nexports.networkChaintologo = networkChaintologo;\nmodule.exports = {\n    contractConfigEthSepolia: contractConfigEthSepolia,\n    contractConfigArbSepolia: contractConfigArbSepolia,\n    networkToContractAddressMap: networkToContractAddressMap,\n    networkToChainIdMap: networkToChainIdMap,\n    networkChaintologo: networkChaintologo\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9HbG9iYWxDb250cy9nbG9iYWwudHN4LmpzIiwibWFwcGluZ3MiOiJBQUFBOzs7OztBQUE4QixzQkFBNEIsOENBQTVCLDZEQUE0Qjs7Ozs7O0FBQ25ELElBQU1BLHdCQUF3QixHQUFHO0lBQ3BDQyxhQUFhLEVBQUUsNENBQTRDO0lBQzNEQyxpQkFBaUIsRUFBRUEsa0JBQWlCO0NBQ3JDO2dDQUhrQyxHQUF4QkYsd0JBQXdCO0FBS25DLElBQU1HLHdCQUF3QixHQUFHO0lBQy9CRixhQUFhLEVBQUUsNENBQTRDO0lBQzNEQyxpQkFBaUIsRUFBRUEsa0JBQWlCO0NBQ3JDO0FBRUQsSUFBTUUsMkJBQTJCLEdBQUc7SUFDbENDLFdBQVcsRUFBRSw0Q0FBNEM7SUFDekRDLFdBQVcsRUFBRSw0Q0FBNEM7SUFDekRDLE9BQU8sRUFBRSxpQ0FBaUM7SUFDMUNDLE1BQU0sRUFBRSxnQ0FBZ0M7SUFDeENDLFFBQVEsRUFBRSxrQ0FBa0M7SUFDNUNDLE9BQU8sRUFBRSxpQ0FBaUM7Q0FDM0M7QUFDRCxJQUFNQyxtQkFBbUIsR0FBRztJQUMxQk4sV0FBVyxFQUFFLElBQUk7SUFDakJDLFdBQVcsRUFBRSxJQUFJO0lBQ2pCQyxPQUFPLEVBQUUsSUFBSTtJQUNiQyxNQUFNLEVBQUUsSUFBSTtJQUNaQyxRQUFRLEVBQUUsSUFBSTtJQUNkQyxPQUFPLEVBQUUsSUFBSTtDQUNkO0FBQ00sSUFBTUUsa0JBQWtCLEdBQUcsSUFBSUMsR0FBRyxDQUFDO0lBQ3hDO1FBQUMsYUFBYTtRQUFDLHVCQUF1QjtLQUFDO0lBQ3ZDO1FBQUMsYUFBYTtRQUFDLHVCQUF1QjtLQUFDO0lBQ3ZDO1FBQUMsU0FBUztRQUFDLG1CQUFtQjtLQUFDO0lBQy9CO1FBQUMsUUFBUTtRQUFDLGtCQUFrQjtLQUFDO0lBQzdCO1FBQUMsVUFBVTtRQUFDLG9CQUFvQjtLQUFDO0lBQ2pDO1FBQUMsU0FBUztRQUFDLG1CQUFtQjtLQUFDO0NBQUMsQ0FBQzswQkFOSixHQUFsQkQsa0JBQWtCO0FBUWpDRSxNQUFNLENBQUNDLE9BQU8sR0FBRztJQUFDZix3QkFBd0IsRUFBeEJBLHdCQUF3QjtJQUFDRyx3QkFBd0IsRUFBeEJBLHdCQUF3QjtJQUFDQywyQkFBMkIsRUFBM0JBLDJCQUEyQjtJQUFDTyxtQkFBbUIsRUFBbkJBLG1CQUFtQjtJQUFDQyxrQkFBa0IsRUFBbEJBLGtCQUFrQjtDQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL0dsb2JhbENvbnRzL2dsb2JhbC50c3g/NDRmOCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgY29udHJhY3RJbnRlcmZhY2UgZnJvbSAnLi4vYWJpL3N0YXJwb3J0YWwtYWJpLmpzb24nO1xuZXhwb3J0IGNvbnN0IGNvbnRyYWN0Q29uZmlnRXRoU2Vwb2xpYSA9IHtcbiAgICBhZGRyZXNzT3JOYW1lOiAnMHhjODE3RUI5NjFkNkE4ODNiZkYwQUI2MEEyNTgxOWU2YjFGN0Q5NGRjJyxcbiAgICBjb250cmFjdEludGVyZmFjZTogY29udHJhY3RJbnRlcmZhY2UsXG4gIH07XG5cbiAgY29uc3QgY29udHJhY3RDb25maWdBcmJTZXBvbGlhID0ge1xuICAgIGFkZHJlc3NPck5hbWU6ICcweDM4MTQ5QUEwMUFGMDQxNzhiOWU0ODFEODIyMWFhRWE5MGFkOGY3MjInLFxuICAgIGNvbnRyYWN0SW50ZXJmYWNlOiBjb250cmFjdEludGVyZmFjZSwgLy8gTWFrZSBzdXJlIHRoaXMgaXMgZGVmaW5lZCBvciBpbXBvcnRlZFxuICB9O1xuXG4gIGNvbnN0IG5ldHdvcmtUb0NvbnRyYWN0QWRkcmVzc01hcCA9IHtcbiAgICBldGhfc2Vwb2xpYTogJzB4YzgxN0VCOTYxZDZBODgzYmZGMEFCNjBBMjU4MTllNmIxRjdEOTRkYycsXG4gICAgYXJiX3NlcG9saWE6ICcweDM4MTQ5QUEwMUFGMDQxNzhiOWU0ODFEODIyMWFhRWE5MGFkOGY3MjInLFxuICAgIFJpbmtlYnk6ICcweFlvdXJDb250cmFjdEFkZHJlc3NGb3JSaW5rZWJ5JyxcbiAgICBHb2VybGk6ICcweFlvdXJDb250cmFjdEFkZHJlc3NGb3JHb2VybGknLFxuICAgIE9wdGltaXNtOiAnMHhZb3VyQ29udHJhY3RBZGRyZXNzRm9yT3B0aW1pc20nLFxuICAgIFBvbHlnb246ICcweFlvdXJDb250cmFjdEFkZHJlc3NGb3JQb2x5Z29uJyxcbiAgfTtcbiAgY29uc3QgbmV0d29ya1RvQ2hhaW5JZE1hcCA9IHtcbiAgICBldGhfc2Vwb2xpYTogMTAwMSxcbiAgICBhcmJfc2Vwb2xpYTogMTAwMixcbiAgICBSaW5rZWJ5OiAxMDA0LFxuICAgIEdvZXJsaTogMTAwNCxcbiAgICBPcHRpbWlzbTogMTAwNSxcbiAgICBQb2x5Z29uOiAxMDA2XG4gIH07XG4gIGV4cG9ydCBjb25zdCBuZXR3b3JrQ2hhaW50b2xvZ28gPSBuZXcgTWFwKFtcbiAgICBbXCJldGhfc2Vwb2xpYVwiLFwiL2xvZ29fZXRoX3NlcG9saWEucG5nXCJdLFxuICAgIFtcImFyYl9zZXBvbGlhXCIsXCIvbG9nb19hcmJfc2Vwb2xpYS5wbmdcIl0sXG4gICAgW1wiUmlua2VieVwiLFwiL2xvZ29fUmlua2VieS5wbmdcIl0sXG4gICAgW1wiR29lcmxpXCIsXCIvbG9nb19Hb2VybGkucG5nXCJdLFxuICAgIFtcIk9wdGltaXNtXCIsXCIvbG9nb19PcHRpbWlzbS5wbmdcIl0sXG4gICAgW1wiUG9seWdvblwiLFwiL2xvZ29fUG9seWdvbi5wbmdcIl1dKVxuXG5tb2R1bGUuZXhwb3J0cyA9IHtjb250cmFjdENvbmZpZ0V0aFNlcG9saWEsY29udHJhY3RDb25maWdBcmJTZXBvbGlhLG5ldHdvcmtUb0NvbnRyYWN0QWRkcmVzc01hcCxuZXR3b3JrVG9DaGFpbklkTWFwLG5ldHdvcmtDaGFpbnRvbG9nb30iXSwibmFtZXMiOlsiY29udHJhY3RDb25maWdFdGhTZXBvbGlhIiwiYWRkcmVzc09yTmFtZSIsImNvbnRyYWN0SW50ZXJmYWNlIiwiY29udHJhY3RDb25maWdBcmJTZXBvbGlhIiwibmV0d29ya1RvQ29udHJhY3RBZGRyZXNzTWFwIiwiZXRoX3NlcG9saWEiLCJhcmJfc2Vwb2xpYSIsIlJpbmtlYnkiLCJHb2VybGkiLCJPcHRpbWlzbSIsIlBvbHlnb24iLCJuZXR3b3JrVG9DaGFpbklkTWFwIiwibmV0d29ya0NoYWludG9sb2dvIiwiTWFwIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./GlobalConts/global.tsx\n");

/***/ })

});